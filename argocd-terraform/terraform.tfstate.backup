{
  "version": 4,
  "terraform_version": "1.12.2",
  "serial": 3,
  "lineage": "6111c25c-0c82-e3a2-bcd1-8291cb8d6c7f",
  "outputs": {},
  "resources": [
    {
      "module": "module.argocd_prod",
      "mode": "data",
      "type": "aws_eks_cluster",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "access_config": [
              {
                "authentication_mode": "API_AND_CONFIG_MAP",
                "bootstrap_cluster_creator_admin_permissions": true
              }
            ],
            "arn": "arn:aws:eks:ca-central-1:736504853235:cluster/demo-prod",
            "certificate_authority": [
              {
                "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJQXpicFFyalBSRDh3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBM01UQXhORE16TVRGYUZ3MHpOVEEzTURneE5ETTRNVEZhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURLajA3c3pJV2hqT0xFcWhoeUlPVzBvem9GTiszMG5RQzJiYVVoYlZlUldjQWxISCszdkY5ano5V1QKUEx0VURFOVNmMnRmM2lBR3N5Z2VuRzNCZUNpbU1kcER0cVQ0dXZWMiswUk82OE03UnZHT1ozZ3RhV2trZUZ5NgpXanpNbW1lSHhLa2RHa1ZFVE8zRm9CSFNaSERkRWlab1JtbDVhcmhuM1ZLY2hvM2VIRVJwUnVmRDhQenAzZ3dtCjUwcUx0WXdtdWN3NG5Cam1ISkJJTDZ0RDdDdzBXVzlueUF6cm83QzFQbEJ1TFNoZGVwWFZrVkM0QWZSSUhtTG4KSStRdU1PZ3U2V0R4cXppQ3pXWFpsRFlQOTFZLzN0aFN2d3NlUUFyc2VvQWRERkZSL05ad3dEcW4vRnJQQWhUQgpFUUdBb21RaWoxa2VSelVTSnl0bWxpMlJreGNKQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJRTW1taEc0SUhvdFJMWTR0bkRkWWd1R2c5aS9UQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ1ltenkwQW5PdApzeHFyTkc2Z3Rvb0N0Z05oZzFjR1d6anlzZlJONUNtV3JsOWxDYUpoN3UrR1djRmd2eXB1emduSng1cDJkZUdWCkRYTW1FTG81ajhra01IU0hxaFhIN0kzZHVoZFRYRE56bVRzVmZCUWkzeC9HYmJjWmQ3QUVIZEE0ZVN6NExUbnAKdTNRU1VzVXlZNWFpblBoMWhlcXBGcTI5c21rdE1LcDY1bEVmbGtXMlJqa2RXSTBlbFR0eFp6NGM3eXF4aTZtZQpmN1o0OTBqanlPYXgrZGVPUm9NdkFkR2FpNG5rVk4xN3J5UTd6aDBrTHhubjBCeVpzcXRkQmUxbEQxRm55MnRrCkE3QU5zN3NoWE1SekQ4dWJsakRGWngyTkZobE5YQ0E5Wk1laDdueGpPL3pqRVlTU3hkR0lZd2FlalNMNnhCRk0KcGVPWm5rQ3R5Z1hSCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
              }
            ],
            "cluster_id": null,
            "compute_config": [],
            "created_at": "2025-07-10T14:33:57Z",
            "enabled_cluster_log_types": [],
            "endpoint": "https://B85E3105CE18ABE90FA782A294618E0E.gr7.ca-central-1.eks.amazonaws.com",
            "id": "demo-prod",
            "identity": [
              {
                "oidc": [
                  {
                    "issuer": "https://oidc.eks.ca-central-1.amazonaws.com/id/B85E3105CE18ABE90FA782A294618E0E"
                  }
                ]
              }
            ],
            "kubernetes_network_config": [
              {
                "elastic_load_balancing": [
                  {
                    "enabled": false
                  }
                ],
                "ip_family": "ipv4",
                "service_ipv4_cidr": "172.20.0.0/16",
                "service_ipv6_cidr": ""
              }
            ],
            "name": "demo-prod",
            "outpost_config": [],
            "platform_version": "eks.50",
            "region": "ca-central-1",
            "remote_network_config": [],
            "role_arn": "arn:aws:iam::736504853235:role/eksctl-demo-prod-cluster-ServiceRole-weNPFXDSai8r",
            "status": "ACTIVE",
            "storage_config": [],
            "tags": {
              "Name": "eksctl-demo-prod-cluster/ControlPlane",
              "alpha.eksctl.io/cluster-name": "demo-prod",
              "alpha.eksctl.io/cluster-oidc-enabled": "false",
              "alpha.eksctl.io/eksctl-version": "0.194.0",
              "eksctl.cluster.k8s.io/v1alpha1/cluster-name": "demo-prod"
            },
            "upgrade_policy": [
              {
                "support_type": "EXTENDED"
              }
            ],
            "version": "1.27",
            "vpc_config": [
              {
                "cluster_security_group_id": "sg-088c2ac0bbf9049e8",
                "endpoint_private_access": false,
                "endpoint_public_access": true,
                "public_access_cidrs": [
                  "0.0.0.0/0"
                ],
                "security_group_ids": [
                  "sg-012f819f3bb526627"
                ],
                "subnet_ids": [
                  "subnet-0769bcb86050d086d",
                  "subnet-08f35988e68b93c4c",
                  "subnet-0e42619893e289674",
                  "subnet-0f0bb5faa8ab87d87"
                ],
                "vpc_id": "vpc-0cf552dc493bab12e"
              }
            ],
            "zonal_shift_config": []
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "module": "module.argocd_prod",
      "mode": "data",
      "type": "aws_eks_cluster_auth",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "demo-prod",
            "name": "demo-prod",
            "region": "ca-central-1",
            "token": "k8s-aws-v1.aHR0cHM6Ly9zdHMuY2EtY2VudHJhbC0xLmFtYXpvbmF3cy5jb20vP0FjdGlvbj1HZXRDYWxsZXJJZGVudGl0eSZWZXJzaW9uPTIwMTEtMDYtMTUmWC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotQ3JlZGVudGlhbD1BS0lBMlc2WTRHTFpYVzdGNk9GVyUyRjIwMjUwNzEyJTJGY2EtY2VudHJhbC0xJTJGc3RzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNTA3MTJUMDcwOTI5WiZYLUFtei1FeHBpcmVzPTAmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JTNCeC1rOHMtYXdzLWlkJlgtQW16LVNpZ25hdHVyZT04MjA4Mjc1ODc0NDNkN2M0ODNiMWZiMzE0YTM5OTkwMWRkZGMzYTIwNTQ3YmRiZTJjMTc4YjlmZmFlYjc5YTdm"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "token"
              }
            ]
          ],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "module": "module.argocd_prod",
      "mode": "managed",
      "type": "helm_release",
      "name": "argocd",
      "provider": "module.argocd_prod.provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "atomic": false,
            "chart": "argo-cd",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "argocd",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": {
              "app_version": "v2.8.3",
              "chart": "argo-cd",
              "first_deployed": 1752303742,
              "last_deployed": 1752303742,
              "name": "argocd",
              "namespace": "argocd",
              "notes": "Redis can be accessed via port 6379   and Sentinel can be accessed via port 26379    on the following DNS name from within your cluster:\nargocd-redis-ha.argocd.svc.cluster.local\n\nTo connect to your Redis server:\n1. Run a Redis pod that you can use as a client:\n\n   kubectl exec -it argocd-redis-ha-server-0 -n argocd -c redis -- sh\n\n2. Connect using the Redis CLI:\n\n  redis-cli -h argocd-redis-ha.argocd.svc.cluster.local\n\n\nDEPRECATED option server.config - Use configs.cm\n\nIn order to access the server UI you have the following options:\n\n1. kubectl port-forward service/argocd-server -n argocd 8080:443\n\n    and then open the browser on http://localhost:8080 and accept the certificate\n\n2. enable ingress in the values file `server.ingress.enabled` and either\n      - Add the annotation for ssl passthrough: https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/#option-1-ssl-passthrough\n      - Set the `configs.params.\"server.insecure\"` in the values file and terminate SSL at your ingress: https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/#option-2-multiple-ingress-objects-and-hosts\n\n\nAfter reaching the UI the first time you cannot login with username and password since you've disabled it. You should enable admin back or configure Dex via `configs.cm.dex.config` or OIDC via `configs.cm.oidc.config`.\n",
              "revision": 1,
              "values": "{\"applicationSet\":{\"replicas\":2},\"controller\":{\"replicas\":1},\"redis-ha\":{\"enabled\":true},\"repoServer\":{\"autoscaling\":{\"enabled\":true,\"minReplicas\":2}},\"server\":{\"config\":{\"resource.customizations\":\"networking.k8s.io/Ingress:\\n  health.lua: |\\n    hs = {}\\n    hs.status = \\\"Healthy\\\"\\n    return hs\"}}}",
              "version": "5.46.2"
            },
            "name": "argocd",
            "namespace": "argocd",
            "pass_credentials": false,
            "postrender": null,
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://argoproj.github.io/argo-helm",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": null,
            "set_list": null,
            "set_sensitive": null,
            "set_wo": null,
            "set_wo_revision": null,
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "#----------------------------------------------------------------\n# Highly Available mode with autoscaling require minimum 3 nodes!\nredis-ha:\n  enabled: true\n\ncontroller:\n  replicas: 1\n\nserver:\n  autoscaling:\n    enabled: true\n    minReplicas: 2\n\nrepoServer:\n  autoscaling:\n    enabled: true\n    minReplicas: 2\n\napplicationSet:\n  replicas: 2\n#----------------------------------------------------------------\n# Fixing issue with Stuck Processing for Ingress resource\nserver:\n  config:\n    resource.customizations: |\n      networking.k8s.io/Ingress:\n        health.lua: |\n          hs = {}\n          hs.status = \"Healthy\"\n          return hs"
            ],
            "verify": false,
            "version": "5.46.2",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "identity_schema_version": 0,
          "identity": {
            "namespace": "argocd",
            "release_name": "argocd"
          },
          "dependencies": [
            "module.argocd_prod.data.aws_eks_cluster.this",
            "module.argocd_prod.data.aws_eks_cluster_auth.this"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
